/*
 * Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten
 * pentagonal numbers are:
 *
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference,
 * 70 - 22 = 48, is not pentagonal.
 *
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and
 * difference is pentagonal and D = |Pk - Pj| is minimised; what is the
 * value of D?
 */
package problem44_pentagonalStuff;

import java.util.Arrays;

/**
 *
 * @author StaNov
 */
public class NewMain {

    private static final int GENERATED_PENTAGONALS = 10000;
    private static long[] pentagonals = new long[GENERATED_PENTAGONALS];

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        long result = getResult();

        System.out.println("\nAnd the result is " + result + "!!!");
    }

    public static long getResult() {
        generatePentagonals();
        
        for(int sum = 1; true; sum++) {
            System.out.println("=== Testing sum: " + sum + " ===");
            for(int i = 0; i < sum - i; i++) {
                long x = pentagonals[i];
                long y = pentagonals[sum - i];
                //System.out.println("| Testing " + x + ", " + y);
                if(areResult(x,y)) {
                    return Math.abs(x - y);
                }
            }
        }
    }

    private static long p(long n) {
        return n*(3*n-1)/2;
    }

    private static void generatePentagonals() {
        for(int i = 1; i < GENERATED_PENTAGONALS; i++) {
            pentagonals[i-1] = p(i);
        }
    }

    private static boolean areResult(long x, long y) {
        return Arrays.binarySearch(pentagonals, x + y) >= 0 && Arrays.binarySearch(pentagonals, Math.abs(x - y)) >= 0;
    }
}
